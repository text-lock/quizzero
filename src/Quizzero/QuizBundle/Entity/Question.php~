<?php
// src/Quizzero/QuizBundle/Entity/Question.php

namespace Quizzero\QuizBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;


/**
 * @ORM\Entity(repositoryClass="Quizzero\QuizBundle\Entity\Repository\QuestionRepository")
 * @ORM\Table(name="question")
 * @ORM\HasLifecycleCallbacks
 */
class Question
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string")
     * @Assert\Choice(
     *     choices = { "textarea", "text", "radio", "checkbox"},
     *     message = "Choose a valid field type: textarea, text, radio, checkbox")
     */
    protected $type;
  
   /**
     * @ORM\Column(type="text")
     * @Assert\NotBlank(message="Body field can't be blanck")
     */
    protected $body;
    
   /**
     * @ORM\Column(type="string", nullable=true)
     *
     * @Assert\File(mimeTypes={  "image/png", "image/jpeg", "image/jpg", "image/gif" })
     */
    protected $image;
    
    /**
     * @ORM\Column(type="text", nullable=true)
     *
     */
    protected $variates;

    /**
     * @ORM\ManyToOne(targetEntity="Quiz", inversedBy="questions")
     * @ORM\JoinColumn(name="quiz_id", referencedColumnName="id", onDelete="SET NULL")
     * @Assert\NotBlank(message="Missed field Title")
     */
    protected $quiz;

    /**
     * @ORM\OneToMany(targetEntity="Result", mappedBy="quiz")
     * 
     */
    protected $results;

    /**
     * @ORM\Column(type="datetime")
    */
    protected $created_at;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $updated_at;

   public function __toString()
    {
      return $this->getBody();
    }
    public function __construct(){
        $this->setCreatedAt(new \DateTime());
        $this->setUpdatedAt(new \DateTime());
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set type
     *
     * @param integer $type
     *
     * @return Question
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return integer
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Set body
     *
     * @param string $body
     *
     * @return Question
     */
    public function setBody($body)
    {
        $this->body = $body;

        return $this;
    }

    /**
     * Get body
     *
     * @return string
     */
    public function getBody()
    {
        return $this->body;
    }

    /**
     * Set image
     *
     * @param string $image
     *
     * @return Question
     */
    public function setImage($image)
    {
        $this->image = $image;

        return $this;
    }

    /**
     * Get image
     *
     * @return string
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * Set correct
     *
     * @param string $correct
     *
     * @return Question
     */
    public function setCorrect($correct)
    {
        $this->correct = $correct;

        return $this;
    }

    /**
     * Get correct
     *
     * @return string
     */
    public function getCorrect()
    {
        return $this->correct;
    }

    /**
     * Set variates
     *
     * @param string $variates
     *
     * @return Question
     */
    public function setVariates($variates)
    {
        $this->variates = $variates;

        return $this;
    }

    /**
     * Get variates
     *
     * @return string
     */
    public function getVariates()
    {
        return $this->variates;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return Question
     */
    public function setCreatedAt($createdAt)
    {
        $this->created_at = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     *
     * @return Question
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updated_at = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set quiz
     *
     * @param \Quizzero\QuizBundle\Entity\Quiz $quiz
     *
     * @return Question
     */
    public function setQuiz(\Quizzero\QuizBundle\Entity\Quiz $quiz = null)
    {
        $this->quiz = $quiz;

        return $this;
    }

    /**
     * Get quiz
     *
     * @return \Quizzero\QuizBundle\Entity\Quiz
     */
    public function getQuiz()
    {
        return $this->quiz;
    }

    /**
     * Add result
     *
     * @param \Quizzero\QuizBundle\Entity\Result $result
     *
     * @return Question
     */
    public function addResult(\Quizzero\QuizBundle\Entity\Result $result)
    {
        $this->results[] = $result;

        return $this;
    }

    /**
     * Remove result
     *
     * @param \Quizzero\QuizBundle\Entity\Result $result
     */
    public function removeResult(\Quizzero\QuizBundle\Entity\Result $result)
    {
        $this->results->removeElement($result);
    }

    /**
     * Get results
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getResults()
    {
        return $this->results;
    }
}
